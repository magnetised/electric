CREATE OR REPLACE PROCEDURE <%= schema() %>.unassign(
    assignment_id    text,
    assign_table_full_name text,
    scope text,
    user_column_name text,
    role_name_string text,
    role_column_name text
) SECURITY DEFINER AS $$
BEGIN

    -- remove triggers
    EXECUTE format('DROP TRIGGER IF EXISTS "electric_cleanup_role_%s" ON <%= schema() %>."assign_%s_join" CASCADE;',
        assignment_id,
        assignment_id
    );

    EXECUTE format('DROP TRIGGER IF EXISTS "electric_insert_role_%s" ON %I CASCADE;',
        assignment_id,
        assign_table_full_name
    );

    EXECUTE format('DROP TRIGGER IF EXISTS "electric_update_role_%s" ON %I CASCADE;',
        assignment_id,
        assign_table_full_name
    );

    -- remove functions
    EXECUTE format('DROP FUNCTION IF EXISTS <%= schema() %>."cleanup_role_%s" CASCADE;',
        assignment_id
    );

    EXECUTE format('DROP FUNCTION IF EXISTS <%= schema() %>."upsert_role_%s" CASCADE;',
        assignment_id
    );

    -- remove join table
    EXECUTE format('DROP TABLE IF EXISTS <%= schema() %>."assign_%s_join" CASCADE;',
        assignment_id
    );

    -- remove assignment
    DELETE FROM <%= assignments_table() %> WHERE id = assignment_id;
END;
$$ LANGUAGE plpgsql;

